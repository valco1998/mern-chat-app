'use strict';

var require$$0 = require('node:fs');
var require$$1 = require('node:path');
var require$$4 = require('which');

var link = {};

Object.defineProperty(link, "__esModule", {
  value: true
});
link.installLinks = installLinks;
var _nodeFs = require$$0;
var _nodePath = require$$1;
var _which = require$$4;
function installLinks(realDirname, binName) {
  const realShadowBinDir = realDirname;
  // find package manager being shadowed by this process
  const bins = _which.sync(binName, {
    all: true
  });
  let shadowIndex = -1;
  const binPath = bins.find((binPath, i) => {
    if ((0, _nodeFs.realpathSync)(_nodePath.dirname(binPath)) === realShadowBinDir) {
      shadowIndex = i;
      return false;
    }
    return true;
  });
  const isWin = process.platform === 'win32';
  if (isWin && binPath) {
    return binPath;
  }
  if (!binPath) {
    console.error(`Socket unable to locate ${binName}; ensure it is available in the PATH environment variable`);
    process.exit(127);
  }
  if (shadowIndex === -1) {
    const binDir = _nodePath.join(realDirname);
    process.env['PATH'] = `${binDir}${isWin ? ';' : ':'}${process.env['PATH']}`;
  }
  return binPath;
}

exports.link = link;
